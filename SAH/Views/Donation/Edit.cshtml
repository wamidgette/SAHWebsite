@model SAH.Models.ModelViews.CreateDonation

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Donation.DonationId, new { Name = "DonationId" })
    @Html.HiddenFor(model => model.Donation.Id, new { Name = "Id" })

    <div class="form-horizontal">
        <h4>Donation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!--User data will be updated in user page-->
        <div class="form-group">
            <label class="control-label col-md-2">Donor name</label>
            <div class="col-md-10">
                <a href="">
                    @Html.DisplayFor(model => model.User.FirstName)
                    @Html.DisplayFor(model => model.User.LastName)
                </a>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Donation.AmountOfDonation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Donation.AmountOfDonation, new { htmlAttributes = new { @class = "form-control", Name = "AmountOfDonation" } })
                @Html.ValidationMessageFor(model => model.Donation.AmountOfDonation, "", new { @class = "text-danger", data_valmsg_for = "AmountOfDonation" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Donation.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" name="DepartmentId">
                    <option value="0">Select Departments</option>
                    @foreach (var department in Model.AllDepartments)
                    {
                        string selected = "";
                        if (Model.Donation.DepartmentId == department.DepartmentId)
                        {
                            selected = "selected";
                        }
                        <option value="@department.DepartmentId" @selected>@department.DepartmentName</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Donation.PaymentMethod, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    string[] paymentMethods = new[] { "credit", "debit" };
                    foreach (var payment in paymentMethods)
                    {
                        string ischecked = "";
                        if (Model.Donation.PaymentMethod == payment) { ischecked = "checked"; }
                        <input type="radio" value="@payment" name="paymentMethod" id=@payment @ischecked />
                        <label for=@payment>@payment</label>
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Donation.DonationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Donation.DonationDate, new { htmlAttributes = new { @class = "form-control", Name = "DonationDate" } })
                @Html.ValidationMessageFor(model => model.Donation.DonationDate, "", new { @class = "text-danger", data_valmsg_for = "DonationDate" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
