@model SAH.Models.ModelViews.EditTicket

@{
    ViewBag.Title = "Edit";
}

<h4>Edit @Model.Ticket.NumberPlate information</h4>


<form action="/Tickets/Edit/@Model.Ticket.TicketId" method="post" name="createTicket">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Ticket.TicketId)

        <div class="form-group">
            @Html.LabelFor(model => model.Ticket.NumberPlate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ticket.NumberPlate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ticket.NumberPlate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ticket.EntryTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ticket.EntryTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ticket.EntryTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ticket.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ticket.Duration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ticket.Duration, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.Ticket.Fees, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ticket.Fees, new { htmlAttributes = new { @class = "form-control", disabled="disabled" } })
                @Html.ValidationMessageFor(model => model.Ticket.Fees, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ticket.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="Ticket.Id" class="form-control">


                    @if (Model.isadmin)
                    {
                        foreach (var user in Model.AllUsers)
                        {
                            string selected = "";
                            if (Model.Ticket.Id == user.Id)
                            {
                                selected = "";

                                <option value="@user.Id" @selected> @user.FirstName @user.LastName </option>
                            }
                        }
                    }
                    else
                    {
                        foreach (var user in Model.AllUsers)
                        {
                            string[] tempName = Model.firstname.Split(new[] { '@' });
                            if (user.FirstName.ToLower().Equals(tempName[0].ToLower()))
                            {
                                <option value="@user.Id">@user.FirstName @user.LastName</option>
                            }

                        }
                    }
                    @*@Html.DisplayFor(modelItem => Model.isadmin)*@
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ticket.SpotId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="Ticket.SpotId" class="form-control">
                    @foreach (var spot in Model.AllSpots)
                    {
                        string selected = "";
                        if (Model.Ticket.SpotId == spot.SpotId)
                        {
                            selected = "";
                        }
                        <option value="@spot.SpotId" @selected>@spot.SpotNumber </option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" onclick="verifyTicket();" class="btn btn-success" />
            </div>
        </div>
    </div>
</form>

<div>
    @Html.ActionLink("Back to Ticket List", "TicketList")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
